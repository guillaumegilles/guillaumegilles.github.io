---
title: "Foam template"
type:
created: 2024-04-28
tags: []
---

[Foam](foam.qmd) supports note templates which let you customize the starting content of
your notes instead of always starting from an empty note. Note templates are
[markdown files](markdown.md) located in the special `.foam/templates` directory
of your [workspace](vscode-workspace.qmd).

## Quickstart

1. Create a template:
  - Run the `Foam: Create New Template` command from the command palette.
  - OR manually create a regular `.md` file in the `.foam/templates` directory.
2. To create a note from a template:
  - Run the `Foam: Create New Note From Template` command and follow the
  instructions. Don't worry if you've not created a template yet! You'll be
  prompted to create a new template if none exist.
  - OR run the `Foam: Create New Note` command, which uses the special default
  template (`.foam/templates/new-note.md`, if it exists)


## Variables

Templates can use all the variables available in [VS Code Snippets](vscode-snippet.md).
In addition, you can also use variables provided by Foam:

- `FOAM_SELECTED_TEXT`: Foam will fill it with selected text when creating a new
  note, if any text is selected. Selected text will be replaced with a wikilink
  to the new                                                                                            |
- `FOAM_TITLE`: The title of the note. If used, Foam will prompt you to enter a
  title for the note.                                                                                                                                                          |
- `FOAM_TITLE_SAFE`: The title of the note in a file system safe format. If used,
  Foam will prompt you to enter a title for the note unless `FOAM_TITLE` has
  already caused the prompt.                                                                           |
- `FOAM_SLUG`: The sluggified title of the note (using the default github slug
  method). If used, Foam will prompt you to enter a title for the note unless
  `FOAM_TITLE` has already caused the prompt.
- `FOAM_DATE_*`: (`FOAM_DATE_YEAR`, `FOAM_DATE_MONTH`, `FOAM_DATE_WEEK` etc.):
  Foam-specific versions of VS Code's datetime snippet variables. Prefer these
  versions over VS Code's.

### `FOAM_DATE_*` variables

Foam defines its own set of datetime variables that have a similar behaviour as
[VS Code's datetime snippet variables](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables).
For example, `FOAM_DATE_YEAR` has the same behaviour as VS Code's `CURRENT_YEAR`,
`FOAM_DATE_SECONDS_UNIX` has the same behaviour as `CURRENT_SECONDS_UNIX`, etc.
By default, prefer using the `FOAM_DATE_` versions. The datetime used to compute
the values will be the same for both `FOAM_DATE_` and VS Code's variables,
**with the exception of the creation notes using the daily note template**.

For more nitty-gritty details about the supported date formats, [see here](https://github.com/foambubble/foam/blob/master/packages/foam-vscode/src/services/variable-resolver.ts).

#### Relative daily notes

When referring to daily notes, you can use the relative snippets (`/+1d`,
`/tomorrow`, etc.). In these cases, the new notes will be created with the daily
note template, but the datetime used should be the relative datetime, not the
current datetime. By using the `FOAM_DATE_` versions of the variables, the
correct relative date will populate the variables, instead of the current datetime.

For example, given this [daily note](foam-daily-notes.qmd) template:

```{markdown}
# $FOAM_DATE_YEAR-$FOAM_DATE_MONTH-$FOAM_DATE_DATE

## Here's what I'm going to do today

- Thing 1
- Thing 2
```

When the `/tomorrow` snippet is used, `FOAM_DATE_` variables will be populated
with tomorrow's date, as expected. If instead you were to use the VS Code
versions of these variables, they would be populated with today's date, not
tomorrow's, causing unexpected behaviour.

When creating notes in any other scenario, the `FOAM_DATE_` values are computed
using the same datetime as the VS Code ones, so the `FOAM_DATE_` versions can be
used in all scenarios by default.

## Metadata

Templates can also contain metadata about the templates themselves. The metadata
is defined in [[yaml]] "Frontmatter" blocks within the templates.

- `filepath`: define a relative or [absolute filepath](os.absolute-path.md)
  to use when creating a note using the template. If the filepath is a
  [relative filepath](os.relative-path.md), it is relative to the current
  [workspace](vscode-workspace.qmd).
- `name`: A human readable name to show in the template picker.
- `description`: A human readable description to show in the template picker.

### Date-based `filepath`

It is possible to vary the `filepath` value based on the current date using the
`FOAM_DATE_*` variables. This is especially useful for the [[foam-daily-notes]]
template if you wish to organize by years, months, etc. Below is an example of a
daily-note template metadata section that will create new daily notes under the
`journal/YEAR/MONTH-MONTH_NAME/` filepath. For example, when a note is created
on November 15, 2022, a new file will be created at
`C:\Users\foam_user\foam_notes\journal\2022\11-Nov\2022-11-15-daily-note.md`.
This method also respects the creation of daily notes relative to the current
date (i.e. `/+1d`).

```yaml
---
type: daily-note
foam_template:
  description: Daily Note for $FOAM_TITLE
  filepath: >-
    "C:\\Users\\foam_user\\foam_notes\\journal\\$FOAM_DATE_YEAR\\$FOAM_DATE_MONTH
    -$FOAM_DATE_MONTH_NAME_SHORT\\$FOAM_DATE_YEAR-$FOAM_DATE_MONTH-$FOAM_DATE_DATE
    -daily-note.md"
---
```

> Note: this method **requires** the use of absolute file paths, and in this
> example is using Windows path conventions. This method will also override any
> filename formatting defined in `.vscode/settings.json`


### Adding template metadata to an existing YAML Frontmatter block

If your template already has a YAML Frontmatter block, you can add the Foam
template metadata to it. Foam only supports adding the template metadata to
_YAML_ Frontmatter blocks. If the existing Frontmatter block uses some other
format (e.g. JSON), you will have to add the template metadata to its own YAML

Further, the template metadata must be provided as a YAML block mapping, with
the attributes placed on the lines immediately following the `foam_template`:

```yaml
---
existing_frontmatter: "Existing Frontmatter block"
foam_template: # this is a YAML "Block" mapping ("Flow" mappings aren't supported)
  name: My Note Template # Attributes must be on the lines immediately following `foam_template`
  description: This is my note template
  filepath: `journal/$FOAM_TITLE.md`
---
This is the rest of the template
```
