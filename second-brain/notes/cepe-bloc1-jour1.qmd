
```{r}
##EXO1
don=read.table("./assets/datasets/tp2.dta", header = T, sep= " ", dec = ".")
dim(don)
summary(don)
don$heure=NULL

mod1 <- lm(maxO3~.,data=don)
summary(mod1)
plot(rstudent(mod1))
abline(h=c(-2,0,2),lty=c(2,1,2),col="red")

residus <- data.frame(x=1:nrow(don),res=rstudent(mod1))
library(ggplot2)
ggplot(residus,aes(x=x,y=res,col="red"))+geom_point()

summary(lm(maxO3~.-Ne12-T15,data=don))
step(mod1)
modch <- step(mod1)
summary(modch)

########################
###VC pour comparer 
########################
nb=10
set.seed(1234)
blocs <- sample(rep(1:nb,length=nrow(don)))
RES <- data.frame(Y=don$maxO3)
for(ii in 1:nb){
  print(ii)
  donA <- don[blocs!=ii,]
  donT <- don[blocs==ii,]
  ####
  mod <- lm(maxO3~.,data=donA)
  RES[blocs==ii,"mco"] <- predict(mod,donT)
  ####
  choixA <- step(mod,k=2,trace=0)
  RES[blocs==ii,"AIC"] <- predict(choixA,donT)
  ####
  choixB <- step(mod,k=log(nrow(donA)),trace=0)
  RES[blocs==ii,"BIC"] <- predict(choixB,donT)
}
RES[1:4,]
erreur <- function(X,Y){mean((X-Y)^2)}
apply(RES,2,erreur,Y=RES$Y)

don2 <- data.frame(don,don^2,don^3)
don2$maxO3.1 <- NULL
don2$maxO3.2 <- NULL
nb=10
set.seed(1234)
blocs <- sample(rep(1:nb,length=nrow(don)))
RES <- data.frame(Y=don2$maxO3)
for(ii in 1:nb){
  print(ii)
  donA <- don2[blocs!=ii,]
  donT <- don2[blocs==ii,]
  ####
  mod <- lm(maxO3~.,data=donA)
  RES[blocs==ii,"mco"] <- predict(mod,donT)
  ####
  choixA <- step(mod,k=2,trace=0)
  RES[blocs==ii,"AIC"] <- predict(choixA,donT)
  ####
  choixB <- step(mod,k=log(nrow(donA)),trace=0)
  RES[blocs==ii,"BIC"] <- predict(choixB,donT)
}
apply(RES,2,erreur,Y=RES$Y)



##########################################
###pour le fun
iter=100
res <- matrix(NA,nrow=iter,ncol=3)
nb=10
for(jj in 1:iter){
  print(jj)
set.seed(1233+jj)
blocs <- sample(rep(1:nb,length=nrow(don)))
RES <- data.frame(Y=don$maxO3)
for(ii in 1:nb){
  #print(ii)
  donA <- don[blocs!=ii,]
  donT <- don[blocs==ii,]
  ####
  mod <- lm(maxO3~.,data=donA)
  RES[blocs==ii,"mco"] <- predict(mod,donT)
  ####
  choixA <- step(mod,k=2,trace=0)
  RES[blocs==ii,"AIC"] <- predict(choixA,donT)
  ####
  choixB <- step(mod,k=log(nrow(donA)),trace=0)
  RES[blocs==ii,"BIC"] <- predict(choixB,donT)
}
#RES[1:4,]
erreur <- function(X,Y){mean((X-Y)^2)}
res[jj,]=apply(RES,2,erreur,Y=RES$Y)[-1]
}
boxplot(res)
colMeans(res)
###################################################

don <- read.table("ozone.txt",sep=";",header=T,
                  stringsAsFactors =T )
summary(don)
unique(don$Ne18)
don <- read.table("ozone.txt",sep=";",header=T,
                  stringsAsFactors =T,na.strings = ".",
                  row.names = 1)
names(don)
summary(don)
don$date=NULL
colMeans(don,na.rm=T)
don[is.na(don$Ne18),]
don <- na.omit(don)
dim(don)

library(glmnet)
XX <- model.matrix(maxO3~.,data=don)
YY <- don$maxO3
tmp <- glmnet(XX,YY,alpha=0,lambda=0)
tmp$beta
mod <- lm(maxO3~.,data=don)
coef(mod)
tmp <- glmnet(XX,YY,alpha=0)
plot(tmp)
plot(tmp,xvar="lambda")
names(tmp)
summary(tmp)
```