---
title: Custom Quarto HTML Theme
---

I guess this is a footnote test[^is it working?]

::: {.callout-notes}
## TL;DR

:::

HTML documents rendered with [Quarto](https://quarto.org/docs/output-formats/html-basics.html) uses Bootstrap, a front-end ***toolkit***. It helps create customized and stylish websites quickly with [Sass](https://sass-lang.com/).

# Bootsrap

[Bootstrap](https://getbootstrap.com/) is a [[open-source]] front-end
framework to build websites and web applications with very to use [[css]]
and [[javascript]].

## Bootstraps Variables

Bootstrap defines over [1,400 Sass variables](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss)
that control fonts, colors, padding, borders, and much more.

## Bootstraps Rules

Note that the variables section is denoted by the `/*-- scss:defaults --*/`
comment and the rules section (where normal CSS rules go) is denoted by
the `/*-- scss:rules --*/` comment.

### Key Features of Bootstrap:

1. **Responsive Grid System**: Bootstrap uses a 12-column grid system
   that helps in creating responsive layouts that adapt to different
   screen sizes and devices. This grid system is flexible and can be
   customized.

2. **Pre-designed Components**: Bootstrap comes with a wide range of
   reusable components, such as navigation bars, buttons, forms, modals,
   carousels, and more. These components are designed to work well
   together and follow consistent design principles.

3. **Customizable Themes**: Developers can easily customize the look and
   feel of their site by overriding Bootstrap's default styles or by
   using Bootstrap's [[css.sass]] variables.

4. **Cross-Browser Compatibility**:

   - Bootstrap is designed to be compatible with all modern browsers, ensuring a consistent experience across different platforms.

5. **JavaScript Plugins**:

   - Bootstrap includes a number of JavaScript plugins that enhance the functionality of the components, such as modals, tooltips, carousels, and more. These plugins are based on jQuery.

6. **Mobile-First Approach**:

   - Bootstrap is built with a mobile-first approach, meaning it is designed to be responsive from the ground up, ensuring that your website works well on mobile devices before scaling up to larger screens.

7. **Documentation**:
   - Bootstrap is well-documented, making it easier for developers to get started quickly and find solutions to common problems.

### Usage:

To use Bootstrap in a project, developers can either download the Bootstrap files and include them in their project or use a CDN (Content Delivery Network) to link to the necessary CSS and JavaScript files.

### Example:

Here's a simple example of a Bootstrap button:

```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bootstrap Example</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="container">
      <h1>Hello, Bootstrap!</h1>
      <button class="btn btn-primary">Click Me!</button>
    </div>
    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
```

In this example, the button is styled using Bootstrap's `btn` and `btn-primary` classes, which provide consistent styling across different browsers and devices.



## Hold On! What is Sass?

Sass stands for **S**yntactically **A**wesome **S**tylesheets and has been created in 2007 by Hampton Lintorn-Catlin[^https://en.wikipedia.org/wiki/Hampton_Lintorn-Catlin] to oversome CSS's shortcoming at that time. Hampton wanted  was to expand vanilla CSS, originated 10 years earlier. At that time, CSS files were redundant 

SCSS was created in 2009 by Chris Eppstein and Natalie Weizenbaum[^https://chriseppstein.github.io/blog/2010/08/16/sass-language-design/] 

## Okay, so How Quarto uses Sass to Theme HTML Documents

In order to get a good looking website with ease and less overhead, Quarto includes 25 [Bootswatch themes](https://bootswatch.com/).

```yaml
theme: default # bootstrap 5 default
theme: cosmo   # cosmo bootswatch theme
theme: pandoc  # pandoc default html treatment
theme: none    # no theme css added to document
```

## I get it, I think...

## Let's customize HTML Theme

For these who desire to create a unique website design and user experience,  Using 

Sass theme files can define both variables that globally set things like colors and fonts, as well as rules that define more fine grained behavior. To customize an existing Bootstrap theme with your own set of variables and/or rules, just provide the base theme and then your custom theme file(s):

```scss
/*-- scss:defaults --*/
$h2-font-size:          1.6rem !default;
$headings-font-weight:  500 !default;

/*-- scss:rules --*/
h1, h2, h3, h4, h5, h6 {
  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);
}
```

# Catppuccin Bootstrap Theme

- ðŸŒ» **Latte**: Our lightest theme harmoniously inverting the essence of
  Catppuccin's dark themes.
- ðŸª´ **FrappÃ©**: A less vibrant alternative using subdued colors for a
  muted aesthetic.
- ðŸŒº **Macchiato**: Medium contrast with gentle colors creating a
  soothing atmosphere.
- ðŸŒ¿ **Mocha**: The Original â€” Our darkest variant offering a cozy feeling
  with color-rich accents.

## How to check

1. need quarto
2. git clone repo
3. change in `_quarto.yml`:

```yaml
format:
  html:
    theme: sass/mocha.scss
```

**Mocha (default)**

## To Do

![[catppuccin-bootswatch-theme/TODO]]
::: {.callout-info}

# To Do

- [ ] Adding `.github/funding.yaml`
- [ ] check out this repo: https://github.com/cadojo/catppuccin/tree/main
- [ ] check out thess repo:
  - https://getbootstrap.com/docs/5.3/customize/sass/#importing
  - https://github.com/catppuccin/palette/blob/main/docs/sass.md

### SCSS

[HTML Theming](https://quarto.org/docs/output-formats/html-themes.html)

- [Bootstrap](https://getbootstrap.com/)
- [Bootswatch](https://bootswatch.com/)
- [SASS](https://sass-lang.com/)
- [Catppuccin Palette](https://catppuccin.com/palette) https://github.com/catppuccin/palette

:::

The first time I came across [catppuccin themes](https://catppuccin.com/), I wasnâ€™t very impressed.

Not to mention the best name ever: cat + cappuccino


## Incorporating SASS variables (color pallete)

https://catppuccin.com/palette

```yaml
$theme: "latte" !default;
/*-- scss:defaults --*/

//
// Color system
//

$base: #eff1f5 !default;
$mantle: #e6e9ef !default;
$crust: #dce0e8 !default;
$surface-0: #ccd0da !default;
$surface-1: #bcc0cc !default;
$surface-2: #acb0be !default;
$overlay-0: #9ca0b0 !default;
$overlay-1: #8c8fa1 !default;
$overlay-2: #7c7f93 !default;

$rosewater: #dc8a78 !default;
$flamingo: #dd7878 !default;
$pink: #ea76cb !default;
$mauve: #8839ef !default;
$red: #d20f39 !default;
$maroon: #e64553 !default;
$peach: #fe640b !default;
$yellow: #df8e1d !default;
$green: #40a02b !default;
$teal: #179299 !default;
$sky: #04a5e5 !default;
$sapphire: #209fb5 !default;
$blue: #1e66f5 !default;
$lavender: #7287fd !default;

$subtext-0: #6c6f85 !default;
$subtext-1: #5c5f77 !default;
$text: #4c4f69 !default;
```

## tinkering with styl guide

https://github.com/catppuccin/catppuccin/blob/main/docs/style-guide.md

1. starting with Quarto .scss files for a theme, for example pulse.scss: https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes
3. each h1 to h6 different color look at vscode handle it

# h1
## h2
### h3
#### h4
##### h5
###### h6

**text with emphasis**
_italic_

# Buttons

<button type="button" class="btn btn-primary">Primary</button>
<button type="button" class="btn btn-secondary">Secondary</button>
<button type="button" class="btn btn-success">Success</button>
<button type="button" class="btn btn-info">Info</button>
<button type="button" class="btn btn-warning">Warning</button>
<button type="button" class="btn btn-danger">Danger</button>
<button type="button" class="btn btn-light">Light</button>
<button type="button" class="btn btn-dark">Dark</button>
<button type="button" class="btn btn-link">Link</button>

<br>

<button type="button" class="btn btn-primary disabled">Primary</button>
<button type="button" class="btn btn-secondary disabled">Secondary</button>
<button type="button" class="btn btn-success disabled">Success</button>
<button type="button" class="btn btn-info disabled">Info</button>
<button type="button" class="btn btn-warning disabled">Warning</button>
<button type="button" class="btn btn-danger disabled">Danger</button>
<button type="button" class="btn btn-light disabled">Light</button>
<button type="button" class="btn btn-dark disabled">Dark</button>
<button type="button" class="btn btn-link disabled">Link</button>

<br>

<button type="button" class="btn btn-primary disabled">Primary</button>
<button type="button" class="btn btn-secondary disabled">Secondary</button>
<button type="button" class="btn btn-success disabled">Success</button>
<button type="button" class="btn btn-info disabled">Info</button>
<button type="button" class="btn btn-warning disabled">Warning</button>
<button type="button" class="btn btn-danger disabled">Danger</button>
<button type="button" class="btn btn-light disabled">Light</button>
<button type="button" class="btn btn-dark disabled">Dark</button>
<button type="button" class="btn btn-link disabled">Link</button>

<br>

<button type="button" class="btn btn-outline-primary">Primary</button>
<button type="button" class="btn btn-outline-secondary">Secondary</button>
<button type="button" class="btn btn-outline-success">Success</button>
<button type="button" class="btn btn-outline-info">Info</button>
<button type="button" class="btn btn-outline-warning">Warning</button>
<button type="button" class="btn btn-outline-danger">Danger</button>
<button type="button" class="btn btn-outline-light">Light</button>
<button type="button" class="btn btn-outline-dark">Dark</button>

<br>

<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
  <button type="button" class="btn btn-primary">Primary</button>
  <div class="btn-group" role="group">
    <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
      <a class="dropdown-item" href="#">Dropdown link</a>
      <a class="dropdown-item" href="#">Dropdown link</a>
    </div>
  </div>
</div>
<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
  <button type="button" class="btn btn-success">Success</button>
  <div class="btn-group" role="group">
    <button id="btnGroupDrop2" type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
    <div class="dropdown-menu" aria-labelledby="btnGroupDrop2">
      <a class="dropdown-item" href="#">Dropdown link</a>
      <a class="dropdown-item" href="#">Dropdown link</a>
    </div>
  </div>
</div>
<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
  <button type="button" class="btn btn-info">Info</button>
  <div class="btn-group" role="group">
    <button id="btnGroupDrop3" type="button" class="btn btn-info dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
    <div class="dropdown-menu" aria-labelledby="btnGroupDrop3">
      <a class="dropdown-item" href="#">Dropdown link</a>
      <a class="dropdown-item" href="#">Dropdown link</a>
    </div>
  </div>
</div>
<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
  <button type="button" class="btn btn-danger">Danger</button>
  <div class="btn-group" role="group">
    <button id="btnGroupDrop4" type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
    <div class="dropdown-menu" aria-labelledby="btnGroupDrop4">
      <a class="dropdown-item" href="#">Dropdown link</a>
      <a class="dropdown-item" href="#">Dropdown link</a>
    </div>
  </div>
</div>

# Typography

<h1>Heading 1</h1>
<h2>Heading 2</h2>
<h3>Heading 3</h3>
<h4>Heading 4</h4>
<h5>Heading 5</h5>
<h6>Heading 6</h6>
<h3>
  Heading
  <small class="text-body-secondary">with faded secondary text</small>
</h3>
<p class="lead">Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>

## Mood Board

- **[Mister Chad](https://mister-chad.com/welcome)**

![](images/chad.png)

- **[Catppuccin](https://catppuccin.com/)**

![](images/catppuccin.png)


# Bootswatch


[Bootswatch](https://bootswatch.com/) is [[open-source]] themes for [[web.dev.bootstrap]]:

Themes are composed of 2 files:

- `_variables.scss`: [[web.dev.bootstrap#Bootstraps Variables]]
- `_bootswatch.scss`: [[web.dev.bootstrap#Bootstraps Rules]]

## Themes

- [default](https://bootswatch.com/default/)
- [cerulean](https://bootswatch.com/cerulean/)
- [cosmo](https://bootswatch.com/cosmo/)
- [cyborg]()
- [darkly]()
- [flatly]()
- [journal]()
- [litera]()
- lumen
- lux
- materia
- minty
- morph
- pulse
- quartz
- sandstone
- simplex
- sketchy
- slate
- solar
- spacelab
- superhero
- united
- vapor
- yeti
- zephyr

# Sass

Sass is the most mature, stable, and powerful professional grade [[css]] extension language in the world.

Sass theme files can define both _variables_ (`/*-- scss:defaults --*/`)
that globally set things like colors and fonts, as well as _rules_ that
define more fine grained behavior (`/*-- scss:rules --*/`).

SASS (Syntactically Awesome Style Sheets) variables are a feature in SASS, a CSS preprocessor, that allow developers to store values (like colors, fonts, sizes, etc.) in variables. These variables can then be reused throughout the stylesheet, making the code more maintainable and easier to update.

### Key Benefits of SASS Variables

1. **Reusability**:

   - Instead of hardcoding values repeatedly, you can define a value once in a variable and use it throughout your stylesheets.

2. **Maintainability**:

   - If you need to change a value (like a color or font size), you only need to update the variable, and the change will automatically apply wherever the variable is used.

3. **Consistency**:
   - Using variables ensures that values remain consistent across the entire project.

### How SASS Variables Work

Variables in SASS start with a dollar sign (`$`), followed by the variable name. The variable is then assigned a value that can be used anywhere in the stylesheet.

### Example of SASS Variables

```scss
// Define variables
$primary-color: #3498db;
$secondary-color: #2ecc71;
$font-stack: "Helvetica, sans-serif";
$base-font-size: 16px;

// Use variables in styles
body {
  font-family: $font-stack;
  font-size: $base-font-size;
  color: $primary-color;
}

button {
  background-color: $primary-color;
  color: white;
  font-size: $base-font-size * 0.875;

  &:hover {
    background-color: $secondary-color;
  }
}
```

### Explanation

- **Defining Variables**:

  - `$primary-color: #3498db;` defines a variable named `$primary-color` and assigns it the value `#3498db` (a shade of blue).
  - Similarly, other variables like `$secondary-color`, `$font-stack`, and `$base-font-size` are defined.

- **Using Variables**:

  - In the `body` selector, the `font-family`, `font-size`, and `color` properties are set using the SASS variables.
  - In the `button` selector, the background color is set to `$primary-color`, and the text color is set to white. The `font-size` is calculated using the `$base-font-size` variable.

- **Nesting**:
  - The `&:hover` inside the `button` selector represents a hover state for the button, where the background color changes to `$secondary-color`.

### Advantages in a Project

- **Easier Theming**:

  - If you want to switch the theme of your website (e.g., from light mode to dark mode), you can simply redefine the variables instead of changing the color values throughout the stylesheet.

- **Simplified Updates**:
  - Updating a specific value becomes simpler. For instance, changing the primary color requires just one change in the variable definition rather than multiple changes across different selectors.

### Example in Bootstrap

Bootstrap uses SASS variables extensively to allow easy customization of its components. For example, the primary color in Bootstrap is controlled by a SASS variable:

```scss
$primary: #007bff;
```

If you want to change the primary color of Bootstrap components across your project, you would only need to update this one variable.
